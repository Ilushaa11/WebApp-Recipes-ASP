@model PagedList.Core.IPagedList<courseA4.Models.Recipe>
@{
    ViewData["Title"] = "Рецепты";
}


<form method="get">
    <div class="form-group">
        <label for="searchString">Поиск по названию / сложности:</label>
        <input type="text" id="searchString" name="searchString" class="form-control" value="@ViewData["CurrentFilter"]" />
    </div>

    <div class="form-group">
        <label for="ingredientFilter">Фильтрация по ингридиенту:</label>
        <input type="text" id="ingredientFilter" name="ingredientFilter" class="form-control" value="@ViewData["IngredientFilter"]" />
    </div>

    <button type="submit" class="btn btn-primary">Поиск</button>

    <a asp-action="Create">Create New</a>

</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]">Рецепт</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DifficultySortParam"]">Сложность</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CookingTimeSortParam"]">Время приготовления</a>
            </th>
            <th>Автор</th>
            <th> ужс</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.DifficultyLevel)</td>
                <td>@Html.DisplayFor(modelItem => item.CookingTime)</td>
                <td>@Html.DisplayFor(modelItem => item.User.Email )</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.RecipeId">Изменить</a> |
                    <a asp-action="Details" asp-route-id="@item.RecipeId">Детали</a> |
                    <a asp-action="Delete" asp-route-id="@item.RecipeId">Удалить</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="pagination">
    @if (Model.HasPreviousPage)
    {
        <a asp-action="Index" asp-route-page="1" class="btn btn-primary">First</a>
        <a asp-action="Index" asp-route-page="@(Model.PageNumber - 1)" class="btn btn-primary">Previous</a>
    }
    else

    {
        <button class="btn btn-secondary" disabled>First</button>
        <button class="btn btn-secondary" disabled>Previous</button>
    }
    <span>Page @Model.PageNumber of @Model.PageCount</span>
    @if (Model.HasNextPage)
    {
        <a asp-action="Index" asp-route-page="@(Model.PageNumber + 1)" class="btn btn-primary">Next</a>
        <a asp-action="Index" asp-route-page="@(Model.PageCount)" class="btn btn-primary">Last</a>
    }
    else
    {
        <button class="btn btn-secondary" disabled>Next</button>
        <button class="btn btn-secondary" disabled>Last</button>
    }
</div>